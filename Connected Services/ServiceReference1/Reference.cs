//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace proyecto_ti.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getObjetosBD", ReplyAction="http://tempuri.org/IService1/getObjetosBDResponse")]
        string[] getObjetosBD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getObjetosBD", ReplyAction="http://tempuri.org/IService1/getObjetosBDResponse")]
        System.Threading.Tasks.Task<string[]> getObjetosBDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InfoObjetos", ReplyAction="http://tempuri.org/IService1/InfoObjetosResponse")]
        string[] InfoObjetos(string objeto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InfoObjetos", ReplyAction="http://tempuri.org/IService1/InfoObjetosResponse")]
        System.Threading.Tasks.Task<string[]> InfoObjetosAsync(string objeto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AgregarObj", ReplyAction="http://tempuri.org/IService1/AgregarObjResponse")]
        void AgregarObj(string objeto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AgregarObj", ReplyAction="http://tempuri.org/IService1/AgregarObjResponse")]
        System.Threading.Tasks.Task AgregarObjAsync(string objeto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarObj", ReplyAction="http://tempuri.org/IService1/EliminarObjResponse")]
        void EliminarObj(string objeto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarObj", ReplyAction="http://tempuri.org/IService1/EliminarObjResponse")]
        System.Threading.Tasks.Task EliminarObjAsync(string objeto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificarObj", ReplyAction="http://tempuri.org/IService1/ModificarObjResponse")]
        void ModificarObj(string objeto, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificarObj", ReplyAction="http://tempuri.org/IService1/ModificarObjResponse")]
        System.Threading.Tasks.Task ModificarObjAsync(string objeto, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InfoUsuario", ReplyAction="http://tempuri.org/IService1/InfoUsuarioResponse")]
        string[] InfoUsuario(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InfoUsuario", ReplyAction="http://tempuri.org/IService1/InfoUsuarioResponse")]
        System.Threading.Tasks.Task<string[]> InfoUsuarioAsync(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidarReg", ReplyAction="http://tempuri.org/IService1/ValidarRegResponse")]
        bool ValidarReg(string Registro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidarReg", ReplyAction="http://tempuri.org/IService1/ValidarRegResponse")]
        System.Threading.Tasks.Task<bool> ValidarRegAsync(string Registro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidarIS", ReplyAction="http://tempuri.org/IService1/ValidarISResponse")]
        bool ValidarIS(string InicioSesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidarIS", ReplyAction="http://tempuri.org/IService1/ValidarISResponse")]
        System.Threading.Tasks.Task<bool> ValidarISAsync(string InicioSesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registrar", ReplyAction="http://tempuri.org/IService1/RegistrarResponse")]
        void Registrar(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registrar", ReplyAction="http://tempuri.org/IService1/RegistrarResponse")]
        System.Threading.Tasks.Task RegistrarAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarCUI", ReplyAction="http://tempuri.org/IService1/VerificarCUIResponse")]
        bool VerificarCUI(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarCUI", ReplyAction="http://tempuri.org/IService1/VerificarCUIResponse")]
        System.Threading.Tasks.Task<bool> VerificarCUIAsync(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sancion", ReplyAction="http://tempuri.org/IService1/SancionResponse")]
        void Sancion(string cui, int dias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sancion", ReplyAction="http://tempuri.org/IService1/SancionResponse")]
        System.Threading.Tasks.Task SancionAsync(string cui, int dias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Levantar", ReplyAction="http://tempuri.org/IService1/LevantarResponse")]
        void Levantar(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Levantar", ReplyAction="http://tempuri.org/IService1/LevantarResponse")]
        System.Threading.Tasks.Task LevantarAsync(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RevisarSanciones", ReplyAction="http://tempuri.org/IService1/RevisarSancionesResponse")]
        string RevisarSanciones(string cui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RevisarSanciones", ReplyAction="http://tempuri.org/IService1/RevisarSancionesResponse")]
        System.Threading.Tasks.Task<string> RevisarSancionesAsync(string cui);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : proyecto_ti.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<proyecto_ti.ServiceReference1.IService1>, proyecto_ti.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] getObjetosBD() {
            return base.Channel.getObjetosBD();
        }
        
        public System.Threading.Tasks.Task<string[]> getObjetosBDAsync() {
            return base.Channel.getObjetosBDAsync();
        }
        
        public string[] InfoObjetos(string objeto) {
            return base.Channel.InfoObjetos(objeto);
        }
        
        public System.Threading.Tasks.Task<string[]> InfoObjetosAsync(string objeto) {
            return base.Channel.InfoObjetosAsync(objeto);
        }
        
        public void AgregarObj(string objeto) {
            base.Channel.AgregarObj(objeto);
        }
        
        public System.Threading.Tasks.Task AgregarObjAsync(string objeto) {
            return base.Channel.AgregarObjAsync(objeto);
        }
        
        public void EliminarObj(string objeto) {
            base.Channel.EliminarObj(objeto);
        }
        
        public System.Threading.Tasks.Task EliminarObjAsync(string objeto) {
            return base.Channel.EliminarObjAsync(objeto);
        }
        
        public void ModificarObj(string objeto, string info) {
            base.Channel.ModificarObj(objeto, info);
        }
        
        public System.Threading.Tasks.Task ModificarObjAsync(string objeto, string info) {
            return base.Channel.ModificarObjAsync(objeto, info);
        }
        
        public string[] InfoUsuario(string cui) {
            return base.Channel.InfoUsuario(cui);
        }
        
        public System.Threading.Tasks.Task<string[]> InfoUsuarioAsync(string cui) {
            return base.Channel.InfoUsuarioAsync(cui);
        }
        
        public bool ValidarReg(string Registro) {
            return base.Channel.ValidarReg(Registro);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarRegAsync(string Registro) {
            return base.Channel.ValidarRegAsync(Registro);
        }
        
        public bool ValidarIS(string InicioSesion) {
            return base.Channel.ValidarIS(InicioSesion);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarISAsync(string InicioSesion) {
            return base.Channel.ValidarISAsync(InicioSesion);
        }
        
        public void Registrar(string data) {
            base.Channel.Registrar(data);
        }
        
        public System.Threading.Tasks.Task RegistrarAsync(string data) {
            return base.Channel.RegistrarAsync(data);
        }
        
        public bool VerificarCUI(string cui) {
            return base.Channel.VerificarCUI(cui);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarCUIAsync(string cui) {
            return base.Channel.VerificarCUIAsync(cui);
        }
        
        public void Sancion(string cui, int dias) {
            base.Channel.Sancion(cui, dias);
        }
        
        public System.Threading.Tasks.Task SancionAsync(string cui, int dias) {
            return base.Channel.SancionAsync(cui, dias);
        }
        
        public void Levantar(string cui) {
            base.Channel.Levantar(cui);
        }
        
        public System.Threading.Tasks.Task LevantarAsync(string cui) {
            return base.Channel.LevantarAsync(cui);
        }
        
        public string RevisarSanciones(string cui) {
            return base.Channel.RevisarSanciones(cui);
        }
        
        public System.Threading.Tasks.Task<string> RevisarSancionesAsync(string cui) {
            return base.Channel.RevisarSancionesAsync(cui);
        }
    }
}
